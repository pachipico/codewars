// You are given a list/array which contains only integers (positive and negative). Your job is to sum only the numbers that are the same and consecutive. The result should be one list.

// Extra credit if you solve it in one line. You can assume there is never an empty list/array and there will always be an integer.

// Same meaning: 1 == 1

// 1 != -1

// #Examples:

// [1,4,4,4,0,4,3,3,1] # should return [1,12,0,4,6,1]

// """So as you can see sum of consecutives 1 is 1 
// sum of 3 consecutives 4 is 12 
// sum of 0... and sum of 2 
// consecutives 3 is 6 ..."""

// [1,1,7,7,3] # should return [2,14,3]
// [-5,-5,7,7,12,0] # should return [-10,14,12,0]

// 내 답안
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


public class Consecutives {
    
    public static List<Integer> sumConsecutives(List<Integer> s) {
        // your code
      int prev = s.get(0);
      int sum = 0;
      List<Integer> res = new ArrayList<>();
      for (Integer i : s) {
        if(i.equals(prev)) sum += i;
        else {
          res.add(sum);
          prev = i;
          sum = i;
        }
      }
        res.add(s.get(s.size()-1));
      return res;
    }

}

// 모범 답안
import java.util.*;

public class Consecutives {
    
    public static List<Integer> sumConsecutives(List<Integer> s) {
      int previous = Integer.MAX_VALUE;
      LinkedList<Integer> l = new LinkedList<>();
      for (Integer v: s){
         l.add(v == previous? l.pollLast() + v : v); 
         previous = v;
      }
      return l; 
    }
}
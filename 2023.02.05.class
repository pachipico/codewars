//Write a function that receives two strings and returns n, where n is equal to the number of characters we should shift the first string forward to match the second. The check should be case sensitive.
//
//        For instance, take the strings "fatigue" and "tiguefa". In this case, the first string has been rotated 5 characters forward to produce the second string, so 5 would be returned.
//
//        If the second string isn't a valid rotation of the first string, the method returns -1.
//        Examples:
//        "coffee", "eecoff" => 2
//        "eecoff", "coffee" => 4
//        "moose", "Moose" => -1
//        "isn't", "'tisn" => 2
//        "Esham", "Esham" => 0
//        "dog", "god" => -1

// 내 답안
public class CalculateRotation {
    static int shiftedDiff(String first, String second) {
        int cnt = 0;
        if (first.equals(second)) return 0;
        if (second.equalsIgnoreCase(first) || new StringBuilder(first).reverse().toString().equals(second) || first.trim().length() == 0 || second.trim().length() == 0)
            return -1;
        while (!first.equals(second)) {
            cnt++;
            String s = rotate(first);

            first = s;


            if (cnt > first.length() + 1) return -1;
        }
        return cnt;
    }

    private static String rotate(String st) {
        int length = st.length();
        StringBuilder sb = new StringBuilder(st.substring(length - 1));
        return sb.append(st, 0, length - 1).toString();
    }
}

// 모범답안
public class CalculateRotation {
    static int shiftedDiff(String first, String second){
        if (first.length() != second.length())
            return -1;
        return (second + second).indexOf(first);
    }
}
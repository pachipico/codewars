//Given the start and end letterbox numbers, write a method to return the frequency of all 10 digits painted.
//
//        Example
//        For start = 125, and end = 132
//
//        The letterboxes are
//
//        125 = 1, 2, 5
//        126 = 1, 2, 6
//        127 = 1, 2, 7
//        128 = 1, 2, 8
//        129 = 1, 2, 9
//        130 = 1, 3, 0
//        131 = 1, 3, 1
//        132 = 1, 3, 2
//        The digit frequencies are:
//
//        0 is painted 1 time
//        1 is painted 9 times
//        2 is painted 6 times
//        etc...
//        and so the method would return [1,9,6,3,0,1,1,1,1,1]
//
//        Notes
//        0 < start <= end
//        In C, the returned value will be free'd.

// 내 답안
public class Dinglemouse {

    public static int[] paintLetterboxes(final int start, final int end) {
        // Your code here
        int[] res = new int[]{0,0,0,0,0,0,0,0,0,0};
        for(int i = start; i<=end;i++ ){
            for(String st : String.valueOf(i).split("")){
                int num = Integer.parseInt(st);
                if(res[num] == 0) res[num] = 1;
                else res[num] += 1;
            }
        }
        return res;
    }

}

// 모범답안(내가 하고 싶었던 방향)
import java.util.Map;
        import java.util.stream.IntStream;
        import static java.util.function.Function.*;
        import static java.util.stream.Collectors.*;

public class Dinglemouse {
    public static int[] paintLetterboxes(final int start, final int end) {
        Map<Integer, Integer> hist = getHist(start, end);
        return IntStream.rangeClosed(0, 9)
                .map(i -> hist.getOrDefault(i, 0))
                .toArray();
    }

    private static Map<Integer, Integer> getHist(int start, int end) {
        return IntStream.rangeClosed(start, end)
                .mapToObj(String::valueOf)
                .flatMapToInt(String::chars)
                .map(Character::getNumericValue)
                .boxed()
                .collect(groupingBy(identity(),
                        collectingAndThen(counting(), Long::intValue)));
    }
}
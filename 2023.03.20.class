//Given a triangle of consecutive odd numbers:
//
//        1
//        3     5
//        7     9    11
//        13    15    17    19
//        21    23    25    27    29
//        ...
//        find the triangle's row knowing its index (the rows are 1-indexed), e.g.:
//
//        odd_row(1)  ==  [1]
//        odd_row(2)  ==  [3, 5]
//        odd_row(3)  ==  [7, 9, 11]
//        Note: your code should be optimized to handle big inputs.

// 내 답안
import java.util.stream.LongStream;

public class UserSolution {
    public static long[] oddRow(int n) {

        long start =(long) n*(n-1)+1;
        return LongStream.range(0, n).map(v -> start+(v*2)).toArray();
    }
}

// 모범 답안
public class UserSolution {
    public static long[] oddRow(int n) {
        long first = (long) n * n - (n - 1);
        return java.util.stream.LongStream.range(0, n).map(i -> first + i * 2).toArray();
    }
}
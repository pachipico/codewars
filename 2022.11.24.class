// Write a function that takes a positive integer n, sums all the cubed values from 1 to n, and returns that sum.

// Assume that the input n will always be a positive integer.

// Examples: (Input --> output)

// 2 --> 9 (sum of the cubes of 1 and 2 is 1 + 8)
// 3 --> 36 (sum of the cubes of 1, 2, and 3 is 1 + 8 + 27)

// 내 풀이
public class Solution {

  public static long sumCubes(long n) {
    return java.util.stream.IntStream
      .range(1, n + 1)
      .mapToLong(i -> i * i * i)
      .sum(); // 못풀었다
  }
}

// 모범답안
public class Solution {

  public static long sumCubes(long n) {
    return java.util.stream.LongStream
      .rangeClosed(1, n)
      .map(i -> i * i * i)
      .sum();
  }
}
// LongStream 을 처음봤다..
